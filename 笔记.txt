都是针对pthread而言的
一个进程内部开辟线程 最多380个左右
一个线程8M，3G的用户空间全部用来给线程函数 最多也就380个左右


线程同步分为了线程互斥和线程通信
互斥：互斥锁 atomic原子类型
（CAS 是一种无锁机制 ）不是无锁 是一种非常轻量级的活锁机制 

通信：条件变量、信号量
条件变量：mutex+conditon_variable （构造函数需要传入一个互斥锁）  改变线程状态
信号量：精细程度不高，看作资源计数没有限制得mutex互斥锁

互斥锁哪个线程获取，哪个线程释放 
信号量可以在不同线程实现sem.post()和sem.wait()  所以二元信号量当互斥量是有风险得

线程通信：生产者消费者模型

这几个池 都是库得形式

size_t是C/C++语言的一种基本无符号整数类型。它是“sizeof”运算符返回的结果的类型。选择类型的大小，以便它可以存储任何类型的理论上可能的数组的最大大小。在32位系统上，“size_t”将占用32位，在64位系统上为64位

unsigned int是一种只能存储非负数的整数类型。在大多数现代系统上，它是32位整数类型

“size_t”和“unsigned int”之间的主要区别在于，“size_t”用于存储对象的大小，而“unsigne int”用于存储整数值

总结：size_t大小不固定，取决于操作系统。unsigned int通常4个字节

模板函数和虚函数不能写在一起